{"version":3,"sources":["Persons.js","PersonForm.js","Filter.js","services/contact.js","App.js","index.js"],"names":["Persons","persons","newFilter","onDelete","showPersons","personList","map","person","key","name","number","onClick","id","showFiltered","filter","toLowerCase","includes","PersonForm","newName","newNumber","handleNameChange","handlePhoneChange","addPerson","onSubmit","value","onChange","type","Filter","baseUrl","axios","get","then","response","data","newObject","post","delete","put","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","notification","setNotification","notificationColor","setNotificationColor","useEffect","contactService","initialContact","clearForm","Notification","message","className","clearNotification","setTimeout","event","target","preventDefault","i","window","confirm","changedPerson","updatePerson","catch","error","updatedPerson","length","personObject","returnedPerson","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d073a8a7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Persons = ({ persons, newFilter, onDelete }) => {\r\n  const showPersons = (personList) => {\r\n    return personList.map((person) => (\r\n      <p key={person.name}>\r\n        {person.name} {person.number}\r\n        <button onClick={onDelete(person.id, person.name)}>delete</button>\r\n      </p>\r\n    ));\r\n  };\r\n\r\n  const showFiltered = persons.filter((person) => {\r\n    return person.name.toLowerCase().includes(newFilter.toLowerCase());\r\n  });\r\n\r\n  // conditional rendering\r\n  const showPersonList =\r\n    newFilter === '' ? showPersons(persons) : showPersons(showFiltered);\r\n\r\n  return showPersonList;\r\n};\r\n\r\nexport default Persons;\r\n","import React from 'react';\r\n\r\nconst PersonForm = ({\r\n  newName,\r\n  newNumber,\r\n  handleNameChange,\r\n  handlePhoneChange,\r\n  addPerson,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <h2>Add a new</h2>\r\n      <form onSubmit={addPerson}>\r\n        <div>\r\n          name: <input value={newName} onChange={handleNameChange} />\r\n        </div>\r\n        <div>\r\n          number:\r\n          <input value={newNumber} onChange={handlePhoneChange} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from 'react';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <div>\r\n      filter shown with <input value={value} onChange={onChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import axios from 'axios';\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst deleteContact = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  deleteContact,\r\n  update,\r\n};\r\n","import React, { useEffect, useState } from 'react';\nimport Persons from './Persons';\nimport PersonForm from './PersonForm';\nimport Filter from './Filter';\nimport contactService from './services/contact';\nimport './index.css';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [newFilter, setNewFilter] = useState('');\n  const [notification, setNotification] = useState(null);\n  const [notificationColor, setNotificationColor] = useState('');\n\n  useEffect(() => {\n    contactService.getAll().then((initialContact) => {\n      setPersons(initialContact);\n    });\n  }, []);\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handlePhoneChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value);\n  };\n\n  const clearForm = () => {\n    setNewName('');\n    setNewNumber('');\n  };\n\n  const Notification = ({ message }) => {\n    if (message === null) {\n      return null;\n    }\n\n    return <div className={notificationColor}>{message}</div>;\n  };\n\n  const clearNotification = () => {\n    setTimeout(() => {\n      setNotification(null);\n    }, 5000);\n  };\n\n  const addPerson = (event) => {\n    event.preventDefault();\n\n    for (let i = 0; i < persons.length; i++) {\n      if (newName === persons[i].name) {\n        const confirm = window.confirm(\n          `${newName} is already exist in the phonebook, replace the old number with a new one?`\n        );\n        if (confirm) {\n          const changedPerson = { ...persons[i], number: newNumber };\n          contactService\n            .update(persons[i].id, changedPerson)\n            .then((updatePerson) => {\n              setPersons(\n                persons.map((person) =>\n                  person.name === newName ? updatePerson : person\n                )\n              );\n              setNotification(\n                `The phone number has been updated for ${persons[i].name}`\n              );\n              setNotificationColor('successful');\n            })\n            .catch((error) => {\n              setNotification(`${error.response.data.error}`);\n              setNotificationColor('error');\n              contactService.getAll().then((updatedPerson) => {\n                setPersons(updatedPerson);\n              });\n            });\n          clearForm();\n          clearNotification();\n        }\n        return;\n      }\n    }\n\n    // create new contact\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    };\n    contactService\n      .create(personObject)\n      .then((returnedPerson) => {\n        setPersons(persons.concat(returnedPerson));\n      })\n      .catch((error) => {\n        setNotification(`${error.response.data.error}`);\n        setNotificationColor('error');\n      });\n    setNotification(`added ${personObject.name}`);\n    setNotificationColor('successful');\n    clearForm();\n    clearNotification();\n  };\n\n  const onDelete = (id, name) => {\n    return () => {\n      const confirm = window.confirm(`Delete ${name} ?`);\n      if (confirm) {\n        contactService.deleteContact(id).then((response) => {\n          setPersons(persons.filter((person) => person.id !== id));\n          setNotification([\n            `Information of ${name} has already been removed from server`,\n            'error',\n          ]);\n          setNotificationColor('error');\n          clearNotification();\n        });\n      }\n      return;\n    };\n  };\n\n  return (\n    <div>\n      <div>\n        <h2>Phonebook</h2>\n        <Notification message={notification} />\n        <Filter value={newFilter} onChange={handleFilterChange} />\n      </div>\n      <div>\n        <PersonForm\n          newName={newName}\n          newNumber={newNumber}\n          handleNameChange={handleNameChange}\n          handlePhoneChange={handlePhoneChange}\n          addPerson={addPerson}\n        />\n        <h2>Numbers</h2>\n        <Persons persons={persons} newFilter={newFilter} onDelete={onDelete} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}